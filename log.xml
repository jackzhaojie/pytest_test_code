<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="4" name="pytest" skipped="0" tests="4" time="0.046"><testcase classname="test_tmp.TestCase" file="test_tmp.py" line="49" name="test_eq_set" time="0.001"><failure message="assert {0, 10, 11, 12} == {0, 20, 21}
  Extra items in the left set:
  10
  11
  12
  Extra items in the right set:
  20
  21
  Full diff:
  - {0, 10, 11, 12}
  + {0, 20, 21}">self = &lt;test_tmp.TestCase object at 0x7eff4972a438&gt;

    def test_eq_set(self):
&gt;       assert set([0,10,11,12]) == set([0,20,21])
E       assert {0, 10, 11, 12} == {0, 20, 21}
E         Extra items in the left set:
E         10
E         11
E         12
E         Extra items in the right set:
E         20
E         21
E         Full diff:
E         - {0, 10, 11, 12}
E         + {0, 20, 21}

test_tmp.py:51: AssertionError</failure></testcase><testcase classname="test_tmp.TestCase" file="test_tmp.py" line="52" name="test_eq_dict" time="0.002"><failure message="AssertionError: assert {&apos;a&apos;: 0, &apos;b&apos;: 1, &apos;c&apos;: 0} == {&apos;a&apos;: 0, &apos;b&apos;: 2, &apos;d&apos;: 0}
  Common items:
  {&apos;a&apos;: 0}
  Differing items:
  {&apos;b&apos;: 1} != {&apos;b&apos;: 2}
  Left contains 1 more item:
  {&apos;c&apos;: 0}
  Right contains 1 more item:
  {&apos;d&apos;: 0}
  Full diff:
  - {&apos;a&apos;: 0, &apos;b&apos;: 1, &apos;c&apos;: 0}
  ?               ^   ^
  + {&apos;a&apos;: 0, &apos;b&apos;: 2, &apos;d&apos;: 0}
  ?               ^   ^">self = &lt;test_tmp.TestCase object at 0x7eff4972aa20&gt;

    def test_eq_dict(self):
&gt;       assert {&quot;a&quot;:0, &quot;b&quot;:1, &quot;c&quot;:0} == {&quot;a&quot;:0, &quot;b&quot;:2, &quot;d&quot;:0}
E       AssertionError: assert {&apos;a&apos;: 0, &apos;b&apos;: 1, &apos;c&apos;: 0} == {&apos;a&apos;: 0, &apos;b&apos;: 2, &apos;d&apos;: 0}
E         Common items:
E         {&apos;a&apos;: 0}
E         Differing items:
E         {&apos;b&apos;: 1} != {&apos;b&apos;: 2}
E         Left contains 1 more item:
E         {&apos;c&apos;: 0}
E         Right contains 1 more item:
E         {&apos;d&apos;: 0}
E         Full diff:
E         - {&apos;a&apos;: 0, &apos;b&apos;: 1, &apos;c&apos;: 0}
E         ?               ^   ^
E         + {&apos;a&apos;: 0, &apos;b&apos;: 2, &apos;d&apos;: 0}
E         ?               ^   ^

test_tmp.py:54: AssertionError</failure></testcase><testcase classname="test_tmp.TestCase" file="test_tmp.py" line="55" name="test_eq_list" time="0.001"><failure message="assert [0, 1, 2] == [0, 1, 3]
  At index 2 diff: 2 != 3
  Full diff:
  - [0, 1, 2]
  ?        ^
  + [0, 1, 3]
  ?        ^">self = &lt;test_tmp.TestCase object at 0x7eff496cd1d0&gt;

    def test_eq_list(self):
&gt;       assert [0,1,2] == [0,1,3]
E       assert [0, 1, 2] == [0, 1, 3]
E         At index 2 diff: 2 != 3
E         Full diff:
E         - [0, 1, 2]
E         ?        ^
E         + [0, 1, 3]
E         ?        ^

test_tmp.py:57: AssertionError</failure></testcase><testcase classname="test_tmp.TestCase" file="test_tmp.py" line="58" name="test_eq_longer_list" time="0.001"><failure message="assert [1, 2] == [1, 2, 3]
  Right contains one more item: 3
  Full diff:
  - [1, 2]
  + [1, 2, 3]
  ?      +++">self = &lt;test_tmp.TestCase object at 0x7eff496cd160&gt;

    def test_eq_longer_list(self):
&gt;       assert [1,2] == [1,2,3]
E       assert [1, 2] == [1, 2, 3]
E         Right contains one more item: 3
E         Full diff:
E         - [1, 2]
E         + [1, 2, 3]
E         ?      +++

test_tmp.py:60: AssertionError</failure></testcase></testsuite>